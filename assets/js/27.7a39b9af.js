(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{277:function(t,r,n){"use strict";n.r(r);var e=n(0),i=Object(e.a)({},function(){var t=this,r=t.$createElement,n=t._self._c||r;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"string对象的创建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#string对象的创建","aria-hidden":"true"}},[t._v("#")]),t._v(" String对象的创建")]),t._v(" "),n("h2",{attrs:{id:"常量池"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常量池","aria-hidden":"true"}},[t._v("#")]),t._v(" 常量池")]),t._v(" "),n("p",[t._v("在 JAVA 语言中有8种基本类型和一种比较特殊的类型String。这些类型为了使他们在运行过程中速度更快，更节省内存，都提供了一种常量池的概念。常量池就类似一个JAVA系统级别提供的缓存。")]),t._v(" "),n("p",[t._v("8种基本类型的常量池都是系统协调的，String类型的常量池比较特殊。它的主要使用方法有两种：")]),t._v(" "),n("ol",[n("li",[t._v("直接使用双引号声明出来的String对象会直接存储在常量池中。")]),t._v(" "),n("li",[t._v("如果不是用双引号声明的String对象，可以使用String提供的intern方法。intern 方法会从字符串常量池中查询当前字符串是否存在，若不存在就会将当前字符串放入常量池中")])]),t._v(" "),n("p",[t._v("在目前已经发布的JDK1.7的HotSpot中，已经把原来存放在方法区中的字符串常量池移出。根据查阅的资料显示在JDK1.7以后的版本中字符串常量池移到堆内存区域；")]),t._v(" "),n("h2",{attrs:{id:"字面量创建string对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字面量创建string对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 字面量创建String对象")]),t._v(" "),n("p",[t._v('String str3 = "helloworld"; // 常量池中添加”helloworld“对象，返回引用地址给str3对象\nString str4 = "helloworld"; // 通过equals()方法判断常量池中是否已经有值为"helloworld"的字面量，如果有直接将其引用地址返回给str4')]),t._v(" "),n("h2",{attrs:{id:"new创建string对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#new创建string对象","aria-hidden":"true"}},[t._v("#")]),t._v(" new创建String对象")]),t._v(" "),n("p",[t._v('String str1 = new String("helloworld"); //\nString str2 = new String("helloworld");\nhttps://blog.csdn.net/weixin_40304387/article/details/81071816\nhttps://tech.meituan.com/2014/03/06/in-depth-understanding-string-intern.html')])])},[],!1,null,null,null);r.default=i.exports}}]);
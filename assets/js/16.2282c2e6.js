(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{219:function(t,n,s){t.exports=s.p+"assets/img/image1.12ae9192.png"},253:function(t,n,s){"use strict";s.r(n);var v=s(0),a=Object(v.a)({},function(){var t=this,n=t.$createElement,v=t._self._c||n;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"python入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#python入门","aria-hidden":"true"}},[t._v("#")]),t._v(" Python入门")]),t._v(" "),v("h2",{attrs:{id:"python是什么？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#python是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" Python是什么？")]),t._v(" "),v("p",[t._v("Python是一种广泛使用的解释型、高级编程、通用型编程语言, 由吉多·范罗苏姆（Guido van Rossum）创造, 第一版发布于1991年.")]),t._v(" "),v("p",[t._v("1989年的圣诞节期间, 吉多·范罗苏姆为了在阿姆斯特丹打发时间, 决心开发一个新的脚本解释程序, 作为ABC语言的一种继承; 之所以选中Python作为程序的名字, 是因为他是BBC电视剧——蒙提·派森的飞行马戏团的爱好者; ABC是由吉多参加设计的一种教学语言, 就吉多本人看来, ABC这种语言非常优美和强大, 是专门为非专业程序员设计的, 但是ABC语言并没有成功, 究其原因, 吉多认为是非开放造成的; 吉多决心在Python中避免这一错误, 并获取了非常好的效果, 完美结合了C和其他一些语言.")]),t._v(" "),v("p",[t._v("就这样, Python在吉多手中诞生了, 实际上, 第一个实现是在Mac计算机上; 可以说, Python是从ABC发展起来, 主要受到了Modula-3（另一种相当优美且强大的语言, 为小型团体所设计的）的影响, 并且结合了Unix shell和C的习惯.")]),t._v(" "),v("p",[t._v("当前吉多仍然是Python的主要开发者, 决定整个Python语言的发展方向, Python社群经常称呼他是终身仁慈独裁者（BDFL）.")]),t._v(" "),v("h2",{attrs:{id:"python-的设计哲学"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#python-的设计哲学","aria-hidden":"true"}},[t._v("#")]),t._v(" Python 的设计哲学")]),t._v(" "),v("ul",[v("li",[t._v("优雅")]),t._v(" "),v("li",[t._v("明确")]),t._v(" "),v("li",[t._v("简单")])]),t._v(" "),v("blockquote",[v("p",[t._v("Python开发者的哲学是“用一种方法, 最好是只有一种方法来做一件事”")])]),t._v(" "),v("h2",{attrs:{id:"为什么选择python？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么选择python？","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么选择Python？")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("代码量少")])]),t._v(" "),v("li",[v("p",[t._v("语法简单、优雅")])])]),t._v(" "),v("blockquote",[v("p",[t._v("人生苦短，我用 Python —— Life is short, you need Python")])]),t._v(" "),v("h2",{attrs:{id:"python-特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#python-特点","aria-hidden":"true"}},[t._v("#")]),t._v(" Python 特点")]),t._v(" "),v("ul",[v("li",[t._v("Python 是"),v("strong",[t._v("完全面向对象的语言")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("函数")]),t._v("、"),v("strong",[t._v("模块")]),t._v("、"),v("strong",[t._v("数字")]),t._v("、"),v("strong",[t._v("字符串")]),t._v("都是对象, "),v("strong",[t._v("在 Python 中一切皆对象")])]),t._v(" "),v("li",[t._v("完全支持继承、重载、多重继承")]),t._v(" "),v("li",[t._v("支持重载运算符, 也支持泛型设计")])])]),t._v(" "),v("li",[t._v("Python "),v("strong",[t._v("拥有一个强大的标准库")]),t._v(", Python 语言的核心只包含 "),v("strong",[t._v("数字")]),t._v("、"),v("strong",[t._v("字符串")]),t._v("、"),v("strong",[t._v("列表")]),t._v("、"),v("strong",[t._v("字典")]),t._v("、"),v("strong",[t._v("文件")]),t._v(" 等常见类型和函数, 而由 Python 标准库提供了 "),v("strong",[t._v("系统管理")]),t._v("、"),v("strong",[t._v("网络通信")]),t._v("、"),v("strong",[t._v("文本处理")]),t._v("、"),v("strong",[t._v("数据库接口")]),t._v("、"),v("strong",[t._v("图形系统")]),t._v("、"),v("strong",[t._v("XML 处理")]),t._v(" 等额外的功能")]),t._v(" "),v("li",[t._v("Python 社区提供了"),v("strong",[t._v("大量的第三方模块")]),t._v(", 使用方式与标准库类似; 它们的功能覆盖 "),v("strong",[t._v("科学计算")]),t._v("、"),v("strong",[t._v("人工智能")]),t._v("、"),v("strong",[t._v("机器学习")]),t._v("、"),v("strong",[t._v("Web 开发")]),t._v("、"),v("strong",[t._v("数据库接口")]),t._v("、"),v("strong",[t._v("图形系统")]),t._v(" 多个领域")])]),t._v(" "),v("h2",{attrs:{id:"python-的优缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#python-的优缺点","aria-hidden":"true"}},[t._v("#")]),t._v(" Python 的优缺点")]),t._v(" "),v("h3",{attrs:{id:"优点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优点","aria-hidden":"true"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),v("ul",[v("li",[t._v("简单、易学")]),t._v(" "),v("li",[t._v("免费、开源 -- Python 是 FLOSS（自由/开放源码软件）之一; 简单地说, 你可以自由地发布这个软件的拷贝、阅读它的源代码、对它做改动、把它的一部分用于新的自由软件中; FLOSS 是基于一个团体分享知识的概念; 这是为什么 Python 如此优秀的原因之一——它是由一群希望看到一个更加优秀的 Python 的人创造并经常改进着的.")]),t._v(" "),v("li",[v("strong",[t._v("面向对象")])]),t._v(" "),v("li",[t._v("丰富的库")]),t._v(" "),v("li",[t._v("可扩展性\n"),v("ul",[v("li",[t._v("如果需要一段关键代码运行得更快或者希望某些算法不公开, 可以把这部分程序用 "),v("code",[t._v("C")]),t._v(" 或 "),v("code",[t._v("C++")]),t._v(" 编写, 然后在 "),v("code",[t._v("Python")]),t._v(" 程序中使用它们.")])])]),t._v(" "),v("li",[t._v("可移植性 -- 由于它的开源本质, Python 已经被移植在许多平台上（经过改动使它能够工作在不同平台上）")])]),t._v(" "),v("h3",{attrs:{id:"缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缺点","aria-hidden":"true"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),v("ul",[v("li",[t._v("运行速度")]),t._v(" "),v("li",[t._v("国内市场较小")]),t._v(" "),v("li",[t._v("中文资料匮乏")])]),t._v(" "),v("h2",{attrs:{id:"解释器（科普）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#解释器（科普）","aria-hidden":"true"}},[t._v("#")]),t._v(" 解释器（科普）")]),t._v(" "),v("p",[v("strong",[t._v("计算机不能直接理解任何除机器语言以外的语言")]),t._v(", 所以必须要把程序员所写的程序语言翻译成机器语言, 计算机才能执行程序; "),v("strong",[t._v("将其他语言翻译成机器语言的工具, 被称为编译器")]),t._v(", 编译器翻译的方式有两种：一个是"),v("strong",[t._v("编译")]),t._v(", 另外一个是"),v("strong",[t._v("解释")]),t._v("; 两种方式之间的区别在于"),v("strong",[t._v("翻译时间点的不同")]),t._v("; 当编译器"),v("strong",[t._v("以解释方式运行的时候")]),t._v(", 也称之为"),v("strong",[t._v("解释器")])]),t._v(" "),v("h2",{attrs:{id:"编译型语言和解释型语言对比"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#编译型语言和解释型语言对比","aria-hidden":"true"}},[t._v("#")]),t._v(" 编译型语言和解释型语言对比")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("编译型语言")]),t._v("：程序在执行之前需要一个专门的编译过程, 把程序编译成为机器语言的文件, 运行时不需要重新翻译, 直接使用编译的结果就行了; 程序执行效率高, 依赖编译器, 跨平台性差些; 如 C、C++")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("解释型语言")]),t._v("：解释型语言编写的程序不进行预先编译, 以文本方式存储程序代码, 会将代码一句一句直接运行; 在发布程序时, 看起来省了道编译工序, 但是在运行程序的时候, 必须先解释再运行\n"),v("img",{attrs:{src:s(219),alt:"编译型语言与解释性语言对比"}})])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("速度")]),t._v(" —— 编译型语言比解释型语言执行速度快")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("跨平台性")]),t._v(" —— 解释型语言比编译型语言跨平台性好")])])]),t._v(" "),v("h2",{attrs:{id:"python-版本"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#python-版本","aria-hidden":"true"}},[t._v("#")]),t._v(" Python 版本")]),t._v(" "),v("p",[t._v("Python 2.0于2000年10月16日发布, 增加了实现完整的垃圾回收, 并且支持Unicode. 同时, 整个开发过程更加透明, 社群对开发进度的影响逐渐扩大.\nPython 3.0于2008年12月3日发布, 此版不完全兼容之前的Python源代码, 不过, 很多新特性后来也被移植到旧的Python 2.6/2.7版本.")]),t._v(" "),v("h2",{attrs:{id:"python-2-x-与-3-x-版本简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#python-2-x-与-3-x-版本简介","aria-hidden":"true"}},[t._v("#")]),t._v(" "),v("code",[t._v("Python 2.x")]),t._v(" 与 "),v("code",[t._v("3.x")]),t._v(" 版本简介")]),t._v(" "),v("p",[t._v("目前市场上有两个 Python 的版本并存着, 分别是 "),v("code",[t._v("Python 2.x")]),t._v(" 和 "),v("code",[t._v("Python 3.x")])]),t._v(" "),v("blockquote",[v("p",[t._v("新的 Python 程序建议使用 "),v("code",[t._v("Python 3.0")]),t._v(" 版本的语法")])]),t._v(" "),v("ul",[v("li",[t._v("Python 2.x 是 "),v("strong",[t._v("过去的版本")]),t._v(", 默认不支持中文\n"),v("ul",[v("li",[t._v("解释器名称是 "),v("strong",[t._v("python")])])])]),t._v(" "),v("li",[t._v("Python 3.x 是 "),v("strong",[t._v("现在和未来 主流的版本")]),t._v(", 默认支持中文, 使用UTF-8字符集编码\n"),v("ul",[v("li",[t._v("解释器名称是 "),v("strong",[t._v("python3")])]),t._v(" "),v("li",[t._v("相对于 "),v("code",[t._v("Python")]),t._v(" 的早期版本, 这是一个 "),v("strong",[t._v("较大的升级")])]),t._v(" "),v("li",[t._v("为了不带入过多的累赘, "),v("code",[t._v("Python 3.0")]),t._v(" 在设计的时候 "),v("strong",[t._v("没有考虑向下兼容")]),t._v(" "),v("ul",[v("li",[t._v("许多早期 "),v("code",[t._v("Python")]),t._v(" 版本设计的程序都无法在 "),v("code",[t._v("Python 3.0")]),t._v(" 上正常执行")])])]),t._v(" "),v("li",[t._v("Python 3.0 发布于 "),v("strong",[t._v("2008年")])]),t._v(" "),v("li",[t._v("到目前为止, Python 3.0 的稳定版本已经有很多年了\n"),v("ul",[v("li",[t._v("Python 3.3 发布于 2012")]),t._v(" "),v("li",[t._v("Python 3.4 发布于 2014")]),t._v(" "),v("li",[t._v("Python 3.5 发布于 2015")]),t._v(" "),v("li",[t._v("Python 3.6 发布于 2016")]),t._v(" "),v("li",[t._v("Python 3.7 发布于 2018")])])])])]),t._v(" "),v("li",[t._v("为了照顾现有的程序, 官方提供了一个过渡版本 —— "),v("strong",[t._v("Python 2.6")]),t._v(" "),v("ul",[v("li",[t._v("基本使用了 "),v("code",[t._v("Python 2.x")]),t._v(" 的语法和库")]),t._v(" "),v("li",[t._v("同时考虑了向 "),v("code",[t._v("Python 3.0")]),t._v(" 的迁移, "),v("strong",[t._v("允许使用部分")]),t._v(" "),v("code",[t._v("Python 3.0")]),t._v(" 的语法与函数")]),t._v(" "),v("li",[t._v("2010 年中推出的 "),v("code",[t._v("Python 2.7")]),t._v(" 被确定为 "),v("strong",[t._v("最后一个Python 2.x 版本")])])])])]),t._v(" "),v("blockquote",[v("p",[t._v("提示：如果开发时, 无法立即使用 Python 3.0（还有极少的第三方库不支持 3.0 的语法）, 建议")]),t._v(" "),v("ul",[v("li",[t._v("先使用 "),v("code",[t._v("Python 3.0")]),t._v(" 版本进行开发")]),t._v(" "),v("li",[t._v("然后使用 "),v("code",[t._v("Python 2.6")]),t._v("、"),v("code",[t._v("Python 2.7")]),t._v(" 来执行, 并且做一些兼容性的处理")])])]),t._v(" "),v("ul",[v("li",[t._v("Python 2.7.10 与 Python 3.7.0 的解释器, 都可以使用exit()命令退出解释器")])]),t._v(" "),v("div",{staticClass:"language-py extra-class"},[v("pre",{pre:!0,attrs:{class:"language-py"}},[v("code",[v("span",{pre:!0,attrs:{class:"token number"}},[t._v("192")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" dengyouxu$ python\nPython "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.7")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v(".10")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Feb "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("GCC "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.2")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v(" Compatible Apple LLVM "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clang"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("1001.0")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v(".37")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v(".14")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" on darwin\nType "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"help"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"copyright"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"credits"')]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"license"')]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" more information"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])])]),v("div",{staticClass:"language-py extra-class"},[v("pre",{pre:!0,attrs:{class:"language-py"}},[v("code",[v("span",{pre:!0,attrs:{class:"token number"}},[t._v("192")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" dengyouxu$ python3\nPython "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.7")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v3"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.0")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("1bf9cc5093")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Jun "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Clang "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.0")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clang"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("600.0")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v(".57")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" on darwin\nType "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"help"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"copyright"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"credits"')]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"license"')]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" more information"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])])]),v("h2",{attrs:{id:"python-解释器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#python-解释器","aria-hidden":"true"}},[t._v("#")]),t._v(" Python 解释器")]),t._v(" "),v("p",[t._v("Python是一门跨平台的脚本语言, Python规定了一个Python语法规则, 根据该规则可编写Python解释器.")]),t._v(" "),v("ul",[v("li",[t._v("CPython: 官方的解释器, 需要区别于其他解释器的时候才以CPython称呼; 这是最常用的Python版本; CPython使用C语言开发的, 所以叫CPython; 在命令行下运行python或者python3就是启动CPython解释器")]),t._v(" "),v("li",[t._v("IPython: IPython是基于CPython之上的一个交互式解释器, 也就是说, IPython只是在交互方式上有所增强, 但是执行Python代码的功能和CPython是完全一样的；CPython用"),v("code",[t._v(">>>")]),t._v("作为提示符, 而IPython用"),v("code",[t._v("In [序号]:")]),t._v("作为提示符")]),t._v(" "),v("li",[t._v("Jython: 原名JPython, Java语言实现的Python, 现已正式发布；Jython可以直接调用Java的各种函数库")]),t._v(" "),v("li",[t._v("PyPy: 使用Python语言写的Python解释器")]),t._v(" "),v("li",[t._v("IronPython: 面向.NET和ECMA CLI的Python实现, IronPython能够直接调用.net平台的各种函数库, 可以将Python程序编译成.net程序")]),t._v(" "),v("li",[t._v("ZhPy: 周蟒, 支持使用繁/简中文语句编写程序的Python语言, 多用于教学")])]),t._v(" "),v("h2",{attrs:{id:"第一个python-源程序（使用python3-x版本）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第一个python-源程序（使用python3-x版本）","aria-hidden":"true"}},[t._v("#")]),t._v(" 第一个Python 源程序（使用Python3.X版本）")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("Python 源程序就是"),v("strong",[t._v("一个特殊格式的文本文件")]),t._v(", 可以"),v("strong",[t._v("使用任意文本编辑软件")]),t._v("做 "),v("code",[t._v("Python")]),t._v(" 的开发, 这里取名为hello.py, 行末的分号可以省略")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("print('hello, world')\n")])])])]),t._v(" "),v("li",[v("p",[t._v("Python 程序的 "),v("strong",[t._v("文件扩展名")]),t._v(" 通常都是 "),v("code",[t._v(".py")])])]),t._v(" "),v("li",[v("p",[t._v("在终端中运行命令"),v("code",[t._v("python3 hello.py")]),t._v("即可, 在终端输出")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("192:~ dengyouxu$ python3 hello.py\nhello world\n")])])])]),t._v(" "),v("li",[v("p",[t._v("如果想直接运行python脚本的话, 在python源文件中的第一行添加"),v("code",[t._v("#!/usr/bin/env python3")]),t._v(", 如")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("#!/usr/bin/env python3\n\nprint('hello, world')\n")])])])]),t._v(" "),v("li",[v("p",[t._v("并对该Python文件设置可执行权限, "),v("code",[t._v("chmod a+x hello.py")]),t._v(", 即可在目录下直接执行命令"),v("code",[t._v("./hello.py")])]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("192:~ dengyouxu$ ./hello.py\nhello world\n")])])])]),t._v(" "),v("li",[v("p",[t._v("Python源文件中的第一行代码"),v("code",[t._v("#!/usr/bin/env python3")]),t._v("的作用是指定运行该Python脚本的解释器")])])]),t._v(" "),v("h2",{attrs:{id:"为什么要指定解释器-科普"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么要指定解释器-科普","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么要指定解释器? (科普)")]),t._v(" "),v("p",[t._v("在脚本中, 第一行以 "),v("code",[t._v("#!")]),t._v(' 开头的代码, 在计算机行业中叫做 "shebang", 也叫做 sha-bang / hashbang / pound-bang / hash-pling, 其作用是"指定由哪个解释器来执行脚本", 只有被直接执行的文件才有必要加入 Shebang.')]),t._v(" "),v("p",[t._v("在 Python 脚本的第一行经常见到这样的注释: "),v("code",[t._v("#!/usr/bin/env python")]),t._v("或者"),v("code",[t._v("#!/usr/bin/python")]),t._v("或者"),v("code",[t._v("#!/usr/bin/env python3")]),t._v("或者"),v("code",[t._v("#!/usr/bin/python3")]),t._v(", 前两个命令是指定为Python2.x的解释器, 后两个是指定为Python3.x的解释器.")]),t._v(" "),v("p",[v("code",[t._v("#!/usr/bin/python3")]),t._v(" 表示 Python3 解释器所处的绝对路径就是"),v("code",[t._v("/usr/bin/python3")]),t._v(', 路径被写死了, 类似于编程中的"硬编码". 之所以有这种写法, 是因为在类 Unix 系统中, python 解释器一般情况下都位于这个路径, 不过, 如果碰到 python 解释器不在该路径下的话, 脚本就无法执行了!')]),t._v(" "),v("p",[v("code",[t._v("#!/usr/bin/env/ python3")]),t._v(' 表示从 "PATH 环境变量"中查找 python3 解释器的位置, 路径没有被写死, 而是在"环境变量"中寻找 python3 解释器的安装路径, 再调用该路径下的解释器来执行脚本.')]),t._v(" "),v("p",[t._v("显然, 采用 "),v("code",[t._v("#!/usr/bin/env python3")]),t._v(" 的写法更灵活更具有通用性, 推荐使用这种写法.")]),t._v(" "),v("h2",{attrs:{id:"文件编码格式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文件编码格式","aria-hidden":"true"}},[t._v("#")]),t._v(" 文件编码格式")]),t._v(" "),v("p",[t._v("在Python2.x版本的源文件中, 需要在文件开头指定文件编码"),v("code",[t._v("#coding=utf-8")]),t._v("或者"),v("code",[t._v("#! -*- coding:utf-8 -*-")]),t._v("(注意: coding和=之间, 或者coding和:之间, 不能有空格!), 因为 Python 2 默认使用的是 ASCII 编码 (不支持中文), Python 3 默认使用 UTF-8 编码 (万国码, 支持中文), 所以在Python3.x源文件中不用指定文件编码")]),t._v(" "),v("h2",{attrs:{id:"python源文件编写规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#python源文件编写规范","aria-hidden":"true"}},[t._v("#")]),t._v(" Python源文件编写规范")]),t._v(" "),v("p",[t._v("Python编程语言PEP8规范: "),v("a",{attrs:{href:"https://www.python.org/dev/peps/pep-0008/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PEP8"),v("OutboundLink")],1)]),t._v(" "),v("ul",[v("li",[t._v("缩进与换行 每级缩进使用四个空格")]),t._v(" "),v("li",[t._v("限制每行的最大长度为79个字符")]),t._v(" "),v("li",[t._v("空行\n"),v("ul",[v("li",[t._v("顶层函数和类之间使用两个空行")]),t._v(" "),v("li",[t._v("类的方法之间用一个空行")]),t._v(" "),v("li",[t._v("在函数中使用空行表示不同逻辑段落")])])]),t._v(" "),v("li",[t._v("导入位于文件的顶部")]),t._v(" "),v("li",[t._v("避免多余空格")]),t._v(" "),v("li",[t._v("注释\n"),v("ul",[v("li",[t._v("注释要保持与时俱进 一句后面两个空格 跟注释")])])]),t._v(" "),v("li",[t._v("命名规范\n"),v("ul",[v("li",[t._v("除了正常的命名规范外")]),t._v(" "),v("li",[t._v("不要使用 大小写的L 大写的O 作为变量名")]),t._v(" "),v("li",[t._v("类名首字母大写 内部类 加上前导下划线")]),t._v(" "),v("li",[t._v("函数名应该小写 增强可读性可以使用下划线分割")])])]),t._v(" "),v("li",[t._v("其他\n"),v("ul",[v("li",[t._v("别用 ‘==‘ 进行布尔值 和 True 或者 False 的比较 应该用 is")])])])])])},[],!1,null,null,null);n.default=a.exports}}]);
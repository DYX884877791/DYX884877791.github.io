(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{234:function(s,t,a){s.exports=a.p+"assets/img/7.0290dedd.png"},235:function(s,t,a){s.exports=a.p+"assets/img/8.dcee75f1.png"},236:function(s,t,a){s.exports=a.p+"assets/img/9.47398f56.png"},237:function(s,t,a){s.exports=a.p+"assets/img/10.130730a4.png"},238:function(s,t,a){s.exports=a.p+"assets/img/11.90ec6eb9.png"},239:function(s,t,a){s.exports=a.p+"assets/img/12.74b9b67a.png"},240:function(s,t,a){s.exports=a.p+"assets/img/13.a024676e.png"},247:function(s,t,a){"use strict";a.r(t);var e=a(0),n=Object(e.a)({},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"api的理解和使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api的理解和使用","aria-hidden":"true"}},[s._v("#")]),s._v(" API的理解和使用")]),s._v(" "),e("h2",{attrs:{id:"通用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通用命令","aria-hidden":"true"}},[s._v("#")]),s._v(" 通用命令")]),s._v(" "),e("h3",{attrs:{id:"全局命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局命令","aria-hidden":"true"}},[s._v("#")]),s._v(" 全局命令")]),s._v(" "),e("ol",[e("li",[s._v("keys：")])]),s._v(" "),e("ul",[e("li",[s._v("遍历出redis中所有的key(keys *)"),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" hello world\nOK\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" java good\nOK\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" python good\nOK\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" php best\nOK\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" keys *\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"php"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"python"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),s._v("\n4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v("\n")])])])]),s._v(" "),e("li",[s._v("keys [pattern]：遍历所有key(匹配正则)"),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" keys he*\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v("\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" keys p\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("empty list or set"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" keys *p\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"php"')]),s._v("\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" keys ^p\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("empty list or set"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" keys ^p* \n")])])]),e("ul",[e("li",[s._v("keys命令一般不在生产环境中使用，生产环境中key太多，容易造成阻塞，生产环境中可以使用scan 命令")])])])]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[s._v("dbsize：计算key的总数")])]),s._v(" "),e("ul",[e("li",[s._v("dbsize命令在计算总数时不会遍历所有键，而是直接获取Redis内置的键总数变量，所以dbsize命令的时间复杂度是o(1)")]),s._v(" "),e("li",[s._v("keys命令会遍历所有的键，所以它的时间复杂度是o(n)，当Redis中保存了大量的键时，禁止在生产环境上使用keys命令"),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" dbsize\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 4\n")])])])])]),s._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[e("p",[s._v("exists key：判断key是否存在，如果存在返回1，否则返回0，时间复杂度为o(1)")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" exists hello\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" exists hello1\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n")])])])]),s._v(" "),e("li",[e("p",[s._v("del key [key...]：删除指定的key，可以同时删除多个key，返回结果为删除成功的个数，如果键不存在，则返回0")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" del hello\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" del java python\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 2\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" del hello1\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" del php hello1\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n")])])])]),s._v(" "),e("li",[e("p",[s._v("expire key seconds：设置key在多少秒以后过期，当超过过期时间后，键会自动删除，此命令可以设置过期的毫秒数")])]),s._v(" "),e("li",[e("p",[s._v("ttl key：查看key剩余的过期时间，有三种返回值")]),s._v(" "),e("ul",[e("li",[s._v("大于或等于0的整数：key的过期时间，等于0表示此瞬间后会被删除")]),s._v(" "),e("li",[s._v("-1：键没有设置过期时间，会一直存在")]),s._v(" "),e("li",[s._v("-2：键不存在")])])]),s._v(" "),e("li",[e("p",[s._v("persist key：去掉键的过期时间，使键会一直存在")])]),s._v(" "),e("li",[e("p",[s._v("type key：返回key的类型")]),s._v(" "),e("ul",[e("li",[s._v("type主要有以下类型：string、hash、list、set、zset、none(如果键不存在返回none)"),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" hello world\nOK\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("type")]),s._v(" hell\nnone\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("type")]),s._v(" hello\nstring\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" sadd myset 1 2 3\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 3\n127.0.0.1:6380"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("type")]),s._v(" myset\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v("\n")])])])])])]),s._v(" "),e("li",[e("p",[s._v("各命令的时间复杂度：")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("命令")]),s._v(" "),e("th",[s._v("时间复杂度")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("keys")]),s._v(" "),e("td",[s._v("o(n)")])]),s._v(" "),e("tr",[e("td",[s._v("dbsize")]),s._v(" "),e("td",[s._v("o(1)")])]),s._v(" "),e("tr",[e("td",[s._v("del")]),s._v(" "),e("td",[s._v("o(1)")])]),s._v(" "),e("tr",[e("td",[s._v("exists")]),s._v(" "),e("td",[s._v("o(1)")])]),s._v(" "),e("tr",[e("td",[s._v("expire")]),s._v(" "),e("td",[s._v("o(1)")])]),s._v(" "),e("tr",[e("td",[s._v("type")]),s._v(" "),e("td",[s._v("o(1)")])])])])])]),s._v(" "),e("h3",{attrs:{id:"数据结构与内部编码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据结构与内部编码","aria-hidden":"true"}},[s._v("#")]),s._v(" 数据结构与内部编码")]),s._v(" "),e("ol",[e("li",[s._v("type命令实际上返回的是当前键的数据结构类型：string、hash、list、set、zset；但这些只是Redis对外的数据结构，但Redis内部每种数据结构都有自己的内部编码实现，而且是多种实现，会在合适的场景下选择合适的内部编码")]),s._v(" "),e("li",[s._v("各类型的多种内部编码实现："),e("img",{attrs:{src:a(234),alt:"内部编码实现"}})]),s._v(" "),e("li",[s._v("redis对象\n"),e("ul",[e("li",[e("p",[s._v("redis的键值都是redisObject对象，即在创建时会生成一个用于键名的redisObject对象和一个用于键值的redisObject对象")])]),s._v(" "),e("li",[e("p",[s._v("那么redis是如何关联键值对？这都是依赖于键空间，其结构是字典(key-value)用于绑定redisObject键值对")])]),s._v(" "),e("li",[e("p",[s._v("redisObject，其结构体如下：")]),s._v(" "),e("div",{staticClass:"language-C extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("redisObject")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 类型")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" type"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 编码")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" encoding"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指向数据的指针")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 记录对象最后一次被程序访问时间，用于计算空转时长(当前时间-lru)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" lru"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* lru time (relative to server.lruclock) */")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 引用计数，用于内存回收")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" refcount"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" robj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("其中字段描述：")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("字段")]),s._v(" "),e("th",[s._v("描述")]),s._v(" "),e("th",[s._v("值")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("type")]),s._v(" "),e("td",[s._v("记录了对象的类型名称")]),s._v(" "),e("td",[s._v("string，list，hash，set，zset")])]),s._v(" "),e("tr",[e("td",[s._v("encoding")]),s._v(" "),e("td",[s._v("记录了对象所使用的编码名称")]),s._v(" "),e("td",[s._v("int，embstr，raw，hashtable， ziplist，intset，linkedlist，skiplist")])]),s._v(" "),e("tr",[e("td",[s._v("lru")]),s._v(" "),e("td",[s._v("记录对象最后一次被程序访问的时间")]),s._v(" "),e("td")]),s._v(" "),e("tr",[e("td",[s._v("refcount")]),s._v(" "),e("td",[s._v("引用计数")]),s._v(" "),e("td",[s._v("初始值为1")])])])])]),s._v(" "),e("li",[e("p",[s._v("redisObject"),e("img",{attrs:{src:a(235),alt:"redisObject结构图"}})])])])]),s._v(" "),e("li",[s._v("类型与编码格式\n"),e("ul",[e("li",[s._v("REDIS_OBJECT中的ptr指向各类型的值，并且针对不同类型会有不同的编码格式，甚至同一类型根据值的不同也有不同的编码格式；")]),s._v(" "),e("li",[s._v("redis会根据值的长度以及个数的不同选择其对应的编码格式，都是为了更好的优化对象在不同场景下的使用效率")]),s._v(" "),e("li",[s._v("以下便是所有的对象所对应的编码格式以及场景："),e("img",{attrs:{src:a(236),alt:"编码格式"}})])])])]),s._v(" "),e("h3",{attrs:{id:"单线程架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单线程架构","aria-hidden":"true"}},[s._v("#")]),s._v(" 单线程架构")]),s._v(" "),e("ol",[e("li",[s._v("Redis使用了单线程架构和I/O多路复用模型来实现高性能的内存数据库服务")]),s._v(" "),e("li",[s._v("Redis中的一条命令从客户端达到服务端不会立刻会执行，所有命令都会进入一个队列中，然后逐个被执行，但保证不会存在两条命令同时被执行，所以不会产生并发问题")]),s._v(" "),e("li",[s._v("为什么单线程还能这么快?\n"),e("ul",[e("li",[s._v("纯内存访问")]),s._v(" "),e("li",[s._v("非阻塞IO，Redis使用epoll作为I/O多路复用技术的实现，再加上Redis自身的事件处理模型将epoll中的连接、读写、关闭都转换为事件，不在网络I/O上浪费过多的时间")]),s._v(" "),e("li",[s._v("由于是单线程，避免了线程之间的切换和竞态产生的消耗")])])]),s._v(" "),e("li",[s._v("注意：如果Redis中某个命令执行时间过长，会造成其他命令的阻塞，对于Redis这种高性能的服务来说很致命。所以在Redis中拒绝长命令，比如keys、flushall、flushdb、slow lua script、mutil/exec、operate big value等")])]),s._v(" "),e("h2",{attrs:{id:"五种主要的数据结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五种主要的数据结构","aria-hidden":"true"}},[s._v("#")]),s._v(" 五种主要的数据结构")]),s._v(" "),e("h3",{attrs:{id:"字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符串","aria-hidden":"true"}},[s._v("#")]),s._v(" 字符串")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("命令：")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("设置值：set key value [ex seconds] [px milliseconds] [nx|xx]")]),s._v(" "),e("ol",[e("li",[s._v("value可以为字符串、数字(包括整数与非整数)、二进制数、JSON串(字符串的限制不能超过512MB)，设置成功则返回O")]),s._v(" "),e("li",[s._v("ex seconds：设置多少秒后过期")]),s._v(" "),e("li",[s._v("px milliseconds：设置多少毫秒后过期")]),s._v(" "),e("li",[s._v("nx：当键不存在时才能设置成功，否则不成功，常用于键的添加")]),s._v(" "),e("li",[s._v("xx：与nx相反，当键必须存在时才能设置成功，常用于键的更新")]),s._v(" "),e("li",[s._v("除了set命令，Redis还提供了setnx、setex命令，分别于nx、xx作用相同")])])]),s._v(" "),e("li",[e("p",[s._v("获取值：get key，获取对应的value，当key不存在时，返回空(nil)，时间复杂度为o(1)")])]),s._v(" "),e("li",[e("p",[s._v("删除键：del key，当删除成功返回1，删除不存在的键时，返回0")])])])]),s._v(" "),e("li",[e("p",[s._v("实例：")]),s._v(" "),e("ol",[e("li",[s._v("设置key-value后查询并删除"),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" hello world\nOK\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" get hello\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" del hello\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" get hello\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nil"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" del hello1\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n")])])])]),s._v(" "),e("li",[s._v("设置ex过期时间(多少秒后过期)"),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" hello world ex 10\nOK\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ttl hello\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 8\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" get hello\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ttl hello\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" -2\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" get hello\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nil"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])]),s._v(" "),e("li",[s._v("设置px过期时间(多少毫秒后过期)"),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" hello world px 10000\nOK\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ttl hello\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 8\n")])])])]),s._v(" "),e("li",[s._v("当ex参数与px参数同时存在时，后面的过期时间会覆盖前面的过期时间"),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" hello world ex 20 px 10000\nOK\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ttl hello\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 7\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" hello world px 10000 ex 20\nOK\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ttl hello\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 19\n")])])])]),s._v(" "),e("li",[s._v("nx与xx，\n"),e("ul",[e("li",[s._v("nx：if not exist，当key不存在时才能设置成功")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" exist_key_test value\nOK\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" exist_key_test value1 nx\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nil"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),e("ul",[e("li",[s._v("xx：if exist，当key存在时才能设置成功")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" not_exist_key_test value xx\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nil"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])]),s._v(" "),e("li",[s._v("setnx与setex\n"),e("ul",[e("li",[s._v("setnx：当key不存在时才能设置成功，setnx key value，设置成功返回1，否则返回0，利用此命令可以实现Redis的分布式锁，"),e("a",{attrs:{href:"https://redis.io/topics/distlock",target:"_blank",rel:"noopener noreferrer"}},[s._v("Redis官方对分布式锁的实现"),e("OutboundLink")],1)])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" setnx exist_key_test value1\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" setnx not_exist_key_test value1\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n")])])]),e("ul",[e("li",[s._v("setex：当key存在时才能设置成功，SETEX key seconds value，将键key的值设置（覆盖）为值value，并设置其过期时间，以秒为单位，当 seconds 参数不合法时，返回一个错误。\n且SETEX 是一个原子性(atomic)操作，关联值和设置生存时间两个动作会在同一时间内完成。")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" setex exist_key_test value1\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" setex exist_key_test -1 value2\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ERR invalid expire "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" setex\n")])])]),e("ul",[e("li",[s._v("setnx/setex与set的不同：set命令不管存不存在，都会设置值")])])]),s._v(" "),e("li",[s._v("批量设置（获取）值：mset、mget\n"),e("ul",[e("li",[s._v("批量设置：mset key1 value1 [key2 value2] [key3 value3]...")]),s._v(" "),e("li",[s._v("批量获取：mget key1 [key2] [key3]...")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mset a1 value1 a2 value2 a3 value3 a4 value4\nOK\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mget a1 a3 a4\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value3"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value4"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mget a1 a4 a5\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value4"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nil"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])]),s._v(" "),e("li",[s._v("计数：incr、decr、incrby、decrby\n"),e("ul",[e("li",[e("p",[s._v("incr：key的value值自增1，返回的结果分为三种情况")]),s._v(" "),e("ul",[e("li",[s._v("value不是整数，返回错误")]),s._v(" "),e("li",[s._v("value是整数，返回增加1后的结果")]),s._v(" "),e("li",[s._v("key不存在，按照值为0增加1，返回结果为1")])])]),s._v(" "),e("li",[e("p",[s._v("decr：key的value值自减1，如果key不存在，返回结果为-1")])]),s._v(" "),e("li",[e("p",[s._v("incrby：incrby key k，增加k")])]),s._v(" "),e("li",[e("p",[s._v("decrby：decrby key k，减少k")])]),s._v(" "),e("li",[e("p",[s._v("incrbyfloat：自增浮点数：decrbyfloat key k")])]),s._v(" "),e("li",[e("p",[s._v("...")])]),s._v(" "),e("li",[e("p",[s._v("很多存储系统和编程语言内部使用CAS机制实现计数功能，会有一定的cpu开销，但在Redis中完全不存在这个问题，因为Redis是单线程架构，任何命令到了Redis服务端都要顺序执行")])])])]),s._v(" "),e("li",[s._v("append：追加值：append key value向字符串尾部追加值")]),s._v(" "),e("li",[s._v("strlen：字符串长度：strlen key，返回字符串的长度，如果是中文字符，每个中文字符占用3个字节")]),s._v(" "),e("li",[s._v("getset：给key设置一个新的value值，但返回的是原来的value值")])]),s._v(" "),e("pre",[e("code",[s._v('```shell\n127.0.0.1:6381> getset hello value1\n(nil)\n127.0.0.1:6381> getset hello value2\n"value1"\n127.0.0.1:6381> getset hello value3\n"value2"\n```\n')])]),s._v(" "),e("ol",{attrs:{start:"12"}},[e("li",[s._v("getrange/setrange：")])]),s._v(" "),e("pre",[e("code",[s._v("* getrange key start end：获取字符串指定下标所有的值，包括开始下标和结束下标\n* setrange key index value：设置指定下标所对应的值\n")])])]),s._v(" "),e("li",[e("p",[s._v("String的内部编码(三种内部编码实现)")]),s._v(" "),e("ul",[e("li",[s._v("int：8个字节的长整形，当value为非整数时，视为字符串")]),s._v(" "),e("li",[s._v("embstr：小于等于30字节的字符串")]),s._v(" "),e("li",[s._v("raw：大于39个字节的字符串")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" key1 12345678\nOK\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" object encoding key1\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"int"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" key1 2.3\nOK\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" object encoding key1\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"embstr"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" key2 2\nOK\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" object encoding key2\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"int"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" key3 2.000000000000000000000000000000000000000000000000000000000000000000000000000000\nOK\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" object encoding key3\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"raw"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" key4 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test"')]),s._v("\nOK\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" object encoding key4\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"embstr"')]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("应用：分布式锁(setnx)、Redis的分布式ID生成器(incr)")])])]),s._v(" "),e("h3",{attrs:{id:"哈希"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#哈希","aria-hidden":"true"}},[s._v("#")]),s._v(" 哈希")]),s._v(" "),e("p",[s._v("哈希键值结构：在Redis中，哈希类型是指某个键的值本身又是一个键值对的结构，形如value={field1,value1},{field2,value2}...{fieldN,valueN}，Redis键值对和哈希类型二者的关系可以用下图表示，与String类型进行对比："),e("img",{attrs:{src:a(237),alt:"哈希与字符串类型对比"}}),s._v("\n哈希类型中的映射关系叫做field-value，注意这里的value指的是field对应的值，而不是键对应的值")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("特点\nfield-value与大多数编程中的字典结构类似，比如Java中的Map，Python中的字典，其中field不能相同，而value可以相同")])]),s._v(" "),e("li",[e("p",[s._v("重要API")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("设置值：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("hset key field获取hash key所对应的field的value，时间复杂度为O(1)")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hset hashkey hashfield hashvalue\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n")])])])]),s._v(" "),e("li",[e("p",[s._v("上述示例中key为hashkey，而field是hashfield，设置成功返回1，否则返回0，此外Redis还提供了hsetnx命令，作用与setnx类似，只不过作用域由键变为了field，如果哈希的key已存在而field不存在，hsetnx能设置成功，如果field已存在，则不能设置成功，说明作用域是在field上")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hsetnx hashkey hashfield1 hashvalue1\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hsetnx hashkey hashfield hashvalue1\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n")])])])])])]),s._v(" "),e("li",[e("p",[s._v("获取值：hget key field设置hash key所对应的field的value")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hget hashkey hashfield\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashvalue"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hget hashkey hashfield1\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashvalue1"')]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("删除值：hdel key field删除hash key所对应的field的value，如果只删除hash key则报错")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hdel hashkey hashfield\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hget hashkey hashfield\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nil"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hdel hashkey\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ERR wrong number of arguments "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hdel'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("command")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("hgetall：hgetall key：获取hash key的所有field及对应的value，时间复杂度为o(n)，注意：小心使用此命令，如果hash元素个数过多，可能会阻塞Redis，如果要部分获取field，使用hmget命令，如果要全部获取field-value的话，可以使用hscan命令，该命令会渐进式遍历哈希类型")])])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("  127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hset hashkey hashfield hashvalue\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n  127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hgetall hashkey\n  1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashfield"')]),s._v("\n  2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashvalue"')]),s._v("\n  3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashfield1"')]),s._v("\n\t4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashvalue1"')]),s._v("\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[e("p",[s._v("hexists：hexists key field：判断hash key是否有field，复杂度为o(1)")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hexists hashkey hashfield\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n  127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hexists hashkey hashfield1\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n  127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hexists hashkey hashfield2\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0 \n")])])])]),s._v(" "),e("li",[e("p",[s._v("hlen：hlen key：获取hash key的field数量，复杂度为o(1)")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hlen hashkey\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 2\n")])])])]),s._v(" "),e("li",[e("p",[s._v("hmset：hmset key field1 value1 field2 value2 ... fieldN valueN批量设置hash key的一批field的value值，时间复杂度为o(n)")])]),s._v(" "),e("li",[e("p",[s._v("hmget：hmget key field1 field2... fieldN批量获取hash key的一批field对应的值，时间复杂度为o(n)")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hmset hashkey1 hashfield hashvalue hashfield1 hashvalue1 hashfield2 hashvalue2\nOK\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hmget hashkey1 hashfield hashfield1 hashfield2\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashvalue"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashvalue1"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashvalue2"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hlen hashkey1\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 3\n")])])])]),s._v(" "),e("li",[e("p",[s._v("hvals key：返回hash key对应的所有field的value，时间复杂度为o(n)")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hvals hashkey1\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashvalue"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashvalue1"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashvalue2"')]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("hkeys key：返回hash key对应的所有field，时间复杂度为o(n)")])]),s._v(" "),e("li",[e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v(" 127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hkeys hashkey1\n 1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashfield"')]),s._v("\n 2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashfield1"')]),s._v("\n 3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashfield2"')]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("hincrby、hincrbyfloat，效果如图incrby与incrbyfloat，但作用域是field")])]),s._v(" "),e("li",[e("p",[s._v("hstrlen key field：计算hash key中field对应的value的长度，只在Redis3.2以上版本中有效")])])])]),s._v(" "),e("li",[e("p",[s._v("Hash实战")]),s._v(" "),e("ul",[e("li",[s._v("记录用户信息")]),s._v(" "),e("li",[s._v("用户的id作为hash中的key，而该用户包含的各属性作为同一个key的不同field")]),s._v(" "),e("li",[s._v("记录网站每个用户的个人主页访问量，可以使用哈希的自增hincrby\n"),e("ul",[e("li",[s._v("hincrby user:1:info pageview count")])])])])]),s._v(" "),e("li",[e("p",[s._v("Hash vs String")]),s._v(" "),e("ul",[e("li",[s._v("相似的API")]),s._v(" "),e("li",[s._v("存储用户信息的三种方式，其中各用户包含的属性也不尽相同\n"),e("ul",[e("li",[s._v("使用String类型存储，String的key作为用户id，将各属性及对应的值序列化为json字符串，然后存入Redis，此方法缺点：序列化开销，修改属性时要操作整个数据")]),s._v(" "),e("li",[s._v("使用String存储，用户id与不同的属性拼接后作为不同的key，不同key下存入不同的值，缺点：占用过多的键、内存占用较大；key比较分散，不好管理")]),s._v(" "),e("li",[s._v("使用hash存储，用户id作为key，不同的属性作为field，不同field存储各value，比较直观，如果合理使用可以节省内存，但要控制hash在ziplist与hashtable两种编码的内部转换，编程稍微复杂")])])])])]),s._v(" "),e("li",[e("p",[s._v("Redis中hash的内部编码")]),s._v(" "),e("ul",[e("li",[s._v("ziplist（压缩列表）：当哈希类型元素的field个数小于hash-max-ziplist-entries配置(默认512各)，同时所有value值的大小都小于hash-max-ziplist-value配置(默认64字节)时，Redis会使用ziplist作为hash的内部实现，该结构更加紧凑，多个元素可以连续存储，更加节省内存")]),s._v(" "),e("li",[s._v("hashtable（哈希表）：当hash类型不满足ziplist的条件时(field个数大于512或者有一个value值的大小大于64字节)，Redis会使用hashtable来作为hash'的内部实现，因为此时ziplist的读写效率会下降，而使用hashtable的读写时间复杂度为o(1)")])])])]),s._v(" "),e("h3",{attrs:{id:"列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#列表","aria-hidden":"true"}},[s._v("#")]),s._v(" 列表")]),s._v(" "),e("p",[s._v("列表(list)：是用来存储多个有序的字符串，列表中的每个元素称为元素(element)，一个列表中最多可以存储(2^32-1)各元素，可以对列表两端进行插入(push)或者弹出(pop)"),e("img",{attrs:{src:a(238),alt:"列表"}})]),s._v(" "),e("ol",[e("li",[e("p",[s._v("特点")]),s._v(" "),e("ul",[e("li",[s._v("列表中的元素是有序的，可以通过索引下标获取某个元素或者某个范围的所有元素")]),s._v(" "),e("li",[s._v("列表中的元素是可以重复的")]),s._v(" "),e("li",[s._v("列表支持左右两边插入和弹出")])])]),s._v(" "),e("li",[e("p",[s._v("重要API")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("添加元素")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("rpush：rpush key value1 value2 ... valueN从列表右边插入多个值(r代表right)，后插入的value在上一个值的右边，时间复杂度为o(n)")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" rpush listkey value1 value2\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 2\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 -1\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("lpush：lpush key value1 value2 ... valueN从列表左边插入多个值(l代表left)，后插入的value在上一个值的左边，时间复杂度为o(n)")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lpush listkey1 value3 value4\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 2\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 -1\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey1 0 -1\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value4"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value3"')]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("linsert：linsert key  before|after value newValue在list中指定的value值前或者后插入newValue，返回结果为当前列表的长度，时间复杂度为o(n)")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" linsert listkey before value1 value3\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 3\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 -1\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value3"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" linsert listkey after value1 value4\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 4\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 -1\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value3"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value4"')]),s._v("\n4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v("\n")])])]),e("p",[s._v("如果linsert中指定的value值不存在，则插入失败，返回结果为-1")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" linsert listkey before value value5\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" -1\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 -1\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value3"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value4"')]),s._v("\n4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v("\n")])])])])])]),s._v(" "),e("li",[e("p",[s._v("查找")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("lrange：lrange key start end获取指定范围内的元素，start、end分别为元素的索引，从左到右看索引分别为0到N-1（正索引），也可以从右到左看，索引分别为-1到-N（负索引），而且正负索引可以混用（start下标不能为负，end下标可正可负）；第二，在Redis中的索引的结束下标包含了元素本身；第三，因为查询列表是从左往右查询，也就是从正着数第几个到倒着数第几个，如果end下标代表的元素在start下标代表元素的左边，则查询为空")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("查询所有元素：start下标为0，end下标为-1")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" rpush listkey value5 value6\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 6\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 -1\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value3"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value4"')]),s._v("\n4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v("\n5"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value5"')]),s._v("\n6"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value6"')]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("查询部分元素，start下标为0，如果end下标为正且超过列表长度(end>N)，则也是查询出所有元素；如果end下标为负且小于列表长度(end<-N)，则查询为空；等于-N，则查询第一个元素")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 8\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value3"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value4"')]),s._v("\n4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v("\n5"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value5"')]),s._v("\n6"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value6"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 -6\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value3"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 -7\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("empty list or set"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("当start下标所代表的元素位于end所代表的的元素的右边时，查询也为空")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 3 2\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("empty list or set"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey -4 -5\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("empty list or set"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])])])]),s._v(" "),e("li",[e("p",[s._v("lindex:lindex key index获取列表指定索引下标的元素，时间复杂度为o(n)")])]),s._v(" "),e("li",[e("p",[s._v("llen:llen key获取列表的长度，时间复杂度为o(1)")])])])]),s._v(" "),e("li",[e("p",[s._v("删除：")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("lpop:lpop key从列表左侧弹出一个元素，返回值为弹出的元素")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 -1\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value3"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value4"')]),s._v("\n4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v("\n5"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value5"')]),s._v("\n6"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value6"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lpop listkey\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value3"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 -1\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value4"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v("\n4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value5"')]),s._v("\n5"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value6"')]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("rpop:rpop key从列表右侧弹出一个元素，返回值为弹出的元素")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" rpop listkey\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value6"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 -1\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value4"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v("\n4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value5"')]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("lrem:lrem key count value根据count值，从列表中删除所有与value相等的值，时间复杂度为o(n)")]),s._v(" "),e("ol",[e("li",[s._v("count>0，从左往右删除最多count个与value值相等的项")]),s._v(" "),e("li",[s._v("count<0，从右往左删除最多-count个与value值相等的项")]),s._v(" "),e("li",[s._v("count=0，删除所有与value相等的项")])])]),s._v(" "),e("li",[e("p",[s._v("ltrim:ltrim key start end按照索引范围修剪列表，时间复杂度为o(n)\n例如：只保留list中第二个到第四个元素ltrim listkey 1 3")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 -1\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value4"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v("\n4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value5"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ltrim listkey 1 3\nOK\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 -1\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value4"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value5"')]),s._v("\n")])])])])])]),s._v(" "),e("li",[e("p",[s._v("修改\nlset:lset key index newValue设置指定索引下标的值为新的值，时间复杂度为o(n)")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 -1\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value4"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value5"')]),s._v("\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lset listkey 1 newValue\nOK\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lrange listkey 0 -1\n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value4"')]),s._v("\n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"newValue"')]),s._v("\n3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value5"')]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("阻塞操作:blpop、brpop是lpop和rpop的阻塞版本\nblpop:blpop key [key1 key2...] timeout\nbrpop:brpop key [key1 key2...] timeout")]),s._v(" "),e("ul",[e("li",[s._v("如果列表为不为空，blpop/brpop会直接返回弹出的值，不会管timeout是多少，都会直接返回；如果是key有多个，该命令会从左到右遍历键，一旦有一个键能够弹出元素，则此命令直接返回")]),s._v(" "),e("li",[s._v("如果列表为空，如果timeout不为零，该命令会阻塞timeout的秒数才返回，如果在此timeout超时时间内，该列表中添加了元素，则会立刻返回，否则会到timeout时间返回空值；如果timeout为0，则该命令会一直阻塞下去，直到该列表中添加了元素")]),s._v(" "),e("li",[s._v("如果是多个客户端对同一个key执行blpop/brpop，那么最先执行该命令的客户端可以获取到弹出的值，其他客户端会被阻塞住")])])]),s._v(" "),e("li",[e("p",[s._v("Tips:")]),s._v(" "),e("ol",[e("li",[s._v("lpush + lpop = stack")]),s._v(" "),e("li",[s._v("lpush + rpop = queue")]),s._v(" "),e("li",[s._v("lpush + ltrim = capped collection（固定长度的列表）")]),s._v(" "),e("li",[s._v("lpush + brpop = message queue")])])])])])]),s._v(" "),e("h3",{attrs:{id:"集合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集合","aria-hidden":"true"}},[s._v("#")]),s._v(" 集合")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("特点:")]),s._v(" "),e("ol",[e("li",[s._v("集合中的元素是无序的，无法根据索引下标来查找元素")]),s._v(" "),e("li",[s._v("不允许插入重复元素")]),s._v(" "),e("li",[s._v("可以计算多个集合间的操作，比如交集、并集以及差集等")])])]),s._v(" "),e("li",[e("p",[s._v("API:")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("添加元素:sadd key element向集合中添加元素，如果元素已存在，则添加失败")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" sadd setkey value\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" sadd setkey value\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n")])])])]),s._v(" "),e("li",[e("p",[s._v("删除元素:srem key element [element1...]移除元素,可以同时删除多个元素")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" srem setkey value\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" srem setkey value\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n")])])])]),s._v(" "),e("li",[e("p",[s._v("计算元素个数:scard key,时间复杂度为o(1),不会遍历集合内的所有元素，会直接返回元素个数的变量")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" sadd setkey value\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" scard setkey\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" sadd setkey value1\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" scard setkey\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 2\n")])])])]),s._v(" "),e("li",[e("p",[s._v("判断元素是否位于集合中:sismember key element,如果存在返回1,否则返回0")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" sismember setkey value1\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" sismember setkey value2\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 0\n")])])])]),s._v(" "),e("li",[e("p",[s._v("随机从集合中返回元素:srandmember key [count],其中count是可选参数,随机从集合中返回元素的个数,默认为1")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" srandmember setkey\n")])])])])])])]),s._v(" "),e("p",[s._v('"value"\n127.0.0.1:6381> srandmember setkey\n"value5"\n127.0.0.1:6381> srandmember setkey 2')]),s._v(" "),e("ol",[e("li",[e("p",[s._v('"value3"')])]),s._v(" "),e("li",[e("p",[s._v('"value4"\n```')]),s._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[e("p",[s._v("随机从集合中弹出元素:spop key,从Redis3.2开始,spop也支持count选项")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" spop setkey\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value5"')]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("获取所有元素:smembers key")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" smembers setkey\n")])])])])]),s._v(" "),e("ol",[e("li",[s._v('"value"')]),s._v(" "),e("li",[s._v('"value3"')]),s._v(" "),e("li",[s._v('"value4"')]),s._v(" "),e("li",[s._v('"value1"'),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\n")])])])])])])]),s._v(" "),e("ol",[e("li",[s._v("计算两个集合之间的交集、并集、差集等")])]),s._v(" "),e("h3",{attrs:{id:"有序集合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#有序集合","aria-hidden":"true"}},[s._v("#")]),s._v(" 有序集合")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("有序集合结构特点")]),s._v(" "),e("ol",[e("li",[s._v("保留了集合中不能存在重复元素的特点")]),s._v(" "),e("li",[s._v("有序集合中的元素可以排序，但不是使用的是索引下标，而是给每个元素设置了一个分数score作为排序的依据"),e("img",{attrs:{src:a(239),alt:""}})]),s._v(" "),e("li",[s._v("集合中的元素不能重复，但是score是可以重复的")]),s._v(" "),e("li",[s._v("列表、集合与有序集合的区别"),e("img",{attrs:{src:a(240),alt:"列表、集合与有序集合的区别"}})])])]),s._v(" "),e("li",[e("p",[s._v("API")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("zadd key score value [score1 value1]...添加元素，返回结果代表添加元素的个数，时间复杂度为o(logN)")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("127.0.0.1:6381"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" zadd zsetkey 12 value1 14 value2 25 value3\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 3\n")])])])]),s._v(" "),e("li",[e("p",[s._v("zrem key element [element1]... 删除元素，时间复杂度为o(1)，返回结果为删除元素的个数")])]),s._v(" "),e("li",[e("p",[s._v("zscore key element 返回元素的分数")])]),s._v(" "),e("li",[e("p",[s._v("zcard key 返回元素的个数，时间复杂度为o(1)")])]),s._v(" "),e("li",[e("p",[s._v("zincrby key increment member：增加元素的分数，increment为要增加的分数值")])]),s._v(" "),e("li",[e("p",[s._v("zrank/zrevrank：zrank key element：返回从低到高/从高到低的分数排名，排名从0开始")])]),s._v(" "),e("li",[e("p",[s._v("zrange/zrevrange：zrange key start end [withscores]：返回特定排名范围内的元素：zrange从低到高排名，zrerange从高到低排名，start、end分别是排名的下标，且包含结束下标，且下标可以为负，如果加上withscores选项，同时会返回成员的分数")])]),s._v(" "),e("li",[e("p",[s._v("zrangebyscore key min max [withscores] [limit offset count]：返回特定分数范围内的元素，min为最小分数，max为最大分数，[limit offset count]选项可以限制输出的起始位置和个数")])]),s._v(" "),e("li",[e("p",[s._v("zcount key min max：返回指定分数范围内元素个数")])])])])])])},[],!1,null,null,null);t.default=n.exports}}]);
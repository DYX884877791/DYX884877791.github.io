(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{286:function(t,a,s){"use strict";s.r(a);var r=s(0),n=Object(r.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"python变量与数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python变量与数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" Python变量与数据类型")]),t._v(" "),s("h2",{attrs:{id:"什么是变量？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是变量？","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是变量？")]),t._v(" "),s("ol",[s("li",[t._v("简单来说，变量就是一个存储数据的内存空间对象。定义一个变量，即向内存申请一个带地址的访问空间对象，用来存储数据，通过变量名找到（指向）这个值。")]),t._v(" "),s("li",[t._v("在Python中，定义变量的时候，不需要指定变量的类型，Python会自动判断类型，查看变量的数据类型用内置函数 "),s("code",[t._v("type()")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nhello world\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'str'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("变量只有在第一次出现的时候，才是定义变量，当变量名再次出现时，不是定义变量，而是直接使用之前定义好的这个变量。")]),t._v(" "),s("li",[t._v("每个变量在内存中创建，都包括变量的标识，名称和数据这些信息，且每个变量在使用前都必须赋值（使用“=”来赋值），变量赋值以后该变量才会被创建。")]),t._v(" "),s("li",[t._v("变量 和 数据 都是保存在内存中的，数据保存在内存中的一个位置，而变量中保存的是这个数据在内存中的地，叫做引用，还可以使用"),s("code",[t._v("id()")]),t._v("函数可以查看变量中保存数据所在的内存地址。")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4486051824")]),t._v("\n")])])]),s("h2",{attrs:{id:"变量的分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的分类","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量的分类")]),t._v(" "),s("h3",{attrs:{id:"局部变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#局部变量","aria-hidden":"true"}},[t._v("#")]),t._v(" 局部变量")]),t._v(" "),s("p",[t._v("局部变量 是在 函数内部 定义的变量，只能在函数内部使用\n函数执行结束后，函数内部的局部变量，会被系统回收\n不同的函数，可以定义相同的名字的局部变量，但是 彼此之间 不会产生影响")]),t._v(" "),s("h3",{attrs:{id:"全局变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局变量","aria-hidden":"true"}},[t._v("#")]),t._v(" 全局变量")]),t._v(" "),s("p",[t._v("全局变量 是在 函数外部定义 的变量，所有函数内部都可以使用这个变量\n首先 查找 函数内部 是否存在 指定名称 的局部变量，如果有，直接使用\n如果没有，查找 函数外部 是否存在 指定名称 的全局变量，如果有，直接使用\n如果还没有，程序报错！")]),t._v(" "),s("h2",{attrs:{id:"python是一门弱类型的编程语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python是一门弱类型的编程语言","aria-hidden":"true"}},[t._v("#")]),t._v(" Python是一门弱类型的编程语言")]),t._v(" "),s("p",[t._v("与Java等强类型语言不同的是，弱类型编程语言的特点主要体现在两方面：")]),t._v(" "),s("ol",[s("li",[t._v("变量无须声明即可直接赋值: 对一个不存在的变量赋值就相当于定义了一个新变量。")]),t._v(" "),s("li",[t._v("变量的数据类型可以动态改变: 同 一个变量可以 一会儿被赋值为整数值， 一会儿被赋值为\n字符串。")])]),t._v(" "),s("h2",{attrs:{id:"标识符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标识符","aria-hidden":"true"}},[t._v("#")]),t._v(" 标识符")]),t._v(" "),s("p",[t._v("标识符用于Python语言的变量、关键字、函数、对象等数据的命名。标识符的命名需要遵循下面的规则。")]),t._v(" "),s("ul",[s("li",[t._v("可以由字母（大写A ~ Z或小写a ~ z）、数字（0 ~ 9）和下划线组合而成，但不能由数字开头；")]),t._v(" "),s("li",[t._v("不能包含除下划线以外的任何特殊字符，如：%、#、&、逗号、空格等；")]),t._v(" "),s("li",[t._v("不能包含空白字符（换行符、空格和制表符称为空白字符）；")]),t._v(" "),s("li",[t._v("标识符不能是Python语言的关键字和保留字；")]),t._v(" "),s("li",[t._v("标识符区分大小写，num1和Num2是两个不同的标识符；")]),t._v(" "),s("li",[t._v("标识符的命名要有意义，做到见名知意；")])]),t._v(" "),s("h2",{attrs:{id:"python中的数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python中的数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" Python中的数据类型")]),t._v(" "),s("p",[t._v("Python中的数据类型包括：")]),t._v(" "),s("ul",[s("li",[t._v("Number（数字）")]),t._v(" "),s("li",[t._v("String（字符串）")]),t._v(" "),s("li",[t._v("List（列表）")]),t._v(" "),s("li",[t._v("Tuple（元组）")]),t._v(" "),s("li",[t._v("Dictionary（字典）")]),t._v(" "),s("li",[t._v("Sets（集合）")]),t._v(" "),s("li",[t._v("None（空值）")])])])},[],!1,null,null,null);a.default=n.exports}}]);
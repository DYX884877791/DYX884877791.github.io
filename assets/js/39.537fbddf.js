(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{284:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"number-数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number-数字","aria-hidden":"true"}},[t._v("#")]),t._v(" Number 数字")]),t._v(" "),a("p",[t._v("Python中数字类型又包括：int（整型）、float（浮点型）、complex（复数）和Boolean（布尔值）")]),t._v(" "),a("h2",{attrs:{id:"int（整型）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#int（整型）","aria-hidden":"true"}},[t._v("#")]),t._v(" int（整型）")]),t._v(" "),a("ol",[a("li",[t._v("在32位机器上，整数的位数为32位，取值范围为 -2^31^～2^31^-1；")]),t._v(" "),a("li",[t._v("在64位系统上，整数的位数为64位，取值范围为 -2^63^～2^63^-1；")]),t._v(" "),a("li",[t._v("在Python3.x版本以后，如果整数发生溢出，Python会自动将整数数据转换为 long 长整数，无论多大都会显示数据类型为 int（整型）；")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'int'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("在Python中，整数不仅可以用十进制表示，也可以用二进制、八进制和十六进制表示：\n"),a("ul",[a("li",[t._v("当用二进制表示整数时，数值前面要加上一个前缀【0b或0B】用来表示是二进制数据")]),t._v(" "),a("li",[t._v("当用八进制表示整数时，数值前面要加上一个前缀【0o或0O】用来表示是八进制数据")]),t._v(" "),a("li",[t._v("当用十六进制表示整数时，数字前面要加上一个前缀【0x或0X】用来表示是十六进制数据")])])]),t._v(" "),a("li",[t._v("在Python2.x中，整数根据保存的数值的长度分为int整数型和long长整型数据，而在Python3.x中long型数据被int代替；")])]),t._v(" "),a("h2",{attrs:{id:"float（浮点型）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#float（浮点型）","aria-hidden":"true"}},[t._v("#")]),t._v(" float（浮点型）")]),t._v(" "),a("ol",[a("li",[t._v("浮点数是属于有理数中某特定子集的数的数字表示，在计算机中用以近似表示任意某个实数。通俗易懂点，我们在这里就把它看成小数吧。之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的。在表示很大或很小的浮点数时必须使用科学计算法表示，把10用e替代。")]),t._v(" "),a("li",[t._v("float 类型存放双精度的浮点数，计算后一般精确到小数点后16位，由于精度受限，进行相等性比较不可靠。（如果需要高精度，可使用 decimal 模块的decimal.Decimal()  函数，这种类型可以准确的表示循环小数，但是处理速度较慢，适合于财政计算。）")]),t._v(" "),a("li",[t._v("只要涉及浮点数的运算，其结果必为浮点型。")])]),t._v(" "),a("h2",{attrs:{id:"complex（复数型）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#complex（复数型）","aria-hidden":"true"}},[t._v("#")]),t._v(" complex（复数型）")]),t._v(" "),a("p",[t._v("复数有实数部分和虚数部分组成，一般形式为x+yj，其中x是复数的实数部分，y是复数的虚数部分，这里的x和y都是实数。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("coml"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15.0j")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("com1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ncoml"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15.j")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#(1+0j)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3+5j'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#(3+5j)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#(3+2j)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#0j")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("coml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#15j")]),t._v("\n")])])]),a("h2",{attrs:{id:"boolean（布尔型）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean（布尔型）","aria-hidden":"true"}},[t._v("#")]),t._v(" Boolean（布尔型）")]),t._v(" "),a("p",[t._v("在Python中，布尔型可以直接用"),a("code",[t._v("True")]),t._v("、"),a("code",[t._v("False")]),t._v("表示布尔值（请注意大小写），也可以使用数字型来转换为布尔型，转换策略是”非零即真“；")]),t._v(" "),a("ol",[a("li",[t._v("直接定义Boolean型变量：")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\nT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bool'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bool'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("使用bool()函数可将数字转换为布尔值")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("t1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n")])])]),a("h2",{attrs:{id:"api一览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api一览","aria-hidden":"true"}},[t._v("#")]),t._v(" API一览")]),t._v(" "),a("p",[a("img",{attrs:{src:"assets/number.png",alt:""}})])])},[],!1,null,null,null);s.default=e.exports}}]);